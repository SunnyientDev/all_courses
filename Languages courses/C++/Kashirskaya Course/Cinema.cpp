/*
В первом ряду кинотеатра N + 2 мест, крайние места заняты персоналом кинотеатра,
но N мест посередине свободно. K школьников входят в зрительный зал по очереди, и,
конечно же, каждый школьник достаёт спиннер и начинает его крутить до начала сеанса.
Поэтому каждый школьник выбирает себе место как можно дальше от уже занятых мест.
А именно, школьник находит самый большой свободный участок в ряду (любой, если таких
несколько) и садится посередине него. Если число свободных мест на этом участке было
нечётно, то школьник садится точно посередине участка, тогда слева и справа от него
остаётся поровну свободных мест. Если же это число чётно, то школьник выбирает одно из
двух свободных мест посередине, тогда с одной стороны от школьника будет на одно
свободное место больше, чем с другой стороны.
По данным числам N и K определите, сколько мест осталось свободными с двух
сторон от школьника, который занял место последним (K-м по счёту).
*/
#include <bits/stdc++.h>
using namespace std;

int pop(multiset<int> & s){
  auto it = s.end(); --it; //берем на один меньше
  int res = *it;
  s.erase(it); //удаление элементовв из позиции it
  return res;
}

int main(){
int n, k;
cin >> n >> k;
multiset <int> s;

s.insert(n); //добавление нового элемента в мультисет
int res1, res2;

for (int i = 0; i < k; ++i){
  n = pop(s);

  res1 = (n - 1) / 2;
  res2 = n - 1 - res1;

  s.insert(res1);
  s.insert(res2);
}

cout << res1 << " " << res2;
return 0;
}
